// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReactDom = require("react-dom");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Webapi__Dom__Element = require("bs-webapi/src/Webapi/Webapi__Dom/Webapi__Dom__Element.js");
var Webapi__Dom__Document = require("bs-webapi/src/Webapi/Webapi__Dom/Webapi__Dom__Document.js");

Css.$$global("body", /* :: */[
      Css.margin(Css.px(0)),
      /* :: */[
        Css.position(/* relative */903134412),
        /* :: */[
          Css.minHeight(Css.vh(100)),
          /* [] */0
        ]
      ]
    ]);

function App$Modal$Cover(Props) {
  return React.createElement("div", {
              className: Css.style(/* :: */[
                    Css.position(/* fixed */10615156),
                    /* :: */[
                      Css.top(Css.px(0)),
                      /* :: */[
                        Css.left(Css.px(0)),
                        /* :: */[
                          Css.right(Css.px(0)),
                          /* :: */[
                            Css.bottom(Css.px(0)),
                            /* :: */[
                              Css.zIndex(500),
                              /* :: */[
                                Css.height(Css.vh(100)),
                                /* :: */[
                                  Css.width(Css.vw(100)),
                                  /* :: */[
                                    Css.background(/* `hex */[
                                          5194459,
                                          "000"
                                        ]),
                                    /* :: */[
                                      Css.opacity(0.5),
                                      /* [] */0
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ])
            });
}

var Cover = /* module */[/* make */App$Modal$Cover];

function App$Modal$Overlay(Props) {
  var children = Props.children;
  var onOverlayClick = Props.onOverlayClick;
  var onEsc = Props.onEsc;
  var escapeHandler = function ($$event) {
    var match = $$event.key;
    if (match === "Escape") {
      return Curry._1(onEsc, /* () */0);
    } else {
      return /* () */0;
    }
  };
  React.useEffect((function () {
          window.addEventListener("keydown", escapeHandler);
          return (function (param) {
                    window.removeEventListener("keydown", escapeHandler);
                    return /* () */0;
                  });
        }), /* array */[]);
  React.useEffect((function () {
          Belt_Option.mapWithDefault(Belt_Option.flatMap(Belt_Option.flatMap(Webapi__Dom__Document.asHtmlDocument(document), (function (x) {
                          return Caml_option.nullable_to_opt(x.body);
                        })), Webapi__Dom__Element.asHtmlElement), /* () */0, (function (x) {
                  x.setAttribute("style", "overflow:hidden");
                  return /* () */0;
                }));
          return (function (param) {
                    return Belt_Option.mapWithDefault(Belt_Option.flatMap(Belt_Option.flatMap(Webapi__Dom__Document.asHtmlDocument(document), (function (prim) {
                                          return Caml_option.nullable_to_opt(prim.body);
                                        })), Webapi__Dom__Element.asHtmlElement), /* () */0, (function (param) {
                                  param.setAttribute("style", "overflow:auto");
                                  return /* () */0;
                                }));
                  });
        }), /* array */[]);
  return React.createElement("div", {
              className: Css.style(/* :: */[
                    Css.position(/* fixed */10615156),
                    /* :: */[
                      Css.top(Css.px(0)),
                      /* :: */[
                        Css.left(Css.px(0)),
                        /* :: */[
                          Css.right(Css.px(0)),
                          /* :: */[
                            Css.bottom(Css.px(0)),
                            /* :: */[
                              Css.zIndex(999),
                              /* :: */[
                                Css.height(Css.vh(100)),
                                /* :: */[
                                  Css.width(Css.vw(100)),
                                  /* :: */[
                                    Css.display(/* flex */-1010954439),
                                    /* :: */[
                                      Css.flexDirection(/* column */-963948842),
                                      /* :: */[
                                        Css.justifyContent(/* center */98248149),
                                        /* [] */0
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]),
              onClick: (function (e) {
                  e.stopPropagation();
                  return Curry._1(onOverlayClick, e);
                })
            }, children);
}

var Overlay = /* module */[/* make */App$Modal$Overlay];

function App$Modal$ModalContentWrapper(Props) {
  var children = Props.children;
  return React.createElement("div", {
              className: Css.style(/* :: */[
                    Css.zIndex(999),
                    /* :: */[
                      Css.background(/* `hex */[
                            5194459,
                            "fff"
                          ]),
                      /* :: */[
                        Css.maxWidth(/* `percent */[
                              -119887163,
                              50
                            ]),
                        /* :: */[
                          Css.marginLeft(/* auto */-1065951377),
                          /* :: */[
                            Css.marginRight(/* auto */-1065951377),
                            /* [] */0
                          ]
                        ]
                      ]
                    ]
                  ]),
              onClick: (function (e) {
                  e.stopPropagation();
                  return /* () */0;
                })
            }, children);
}

var ModalContentWrapper = /* module */[/* make */App$Modal$ModalContentWrapper];

function renderToBody(element, onOverlayClick, onEsc) {
  var $$document$1 = document;
  var partial_arg = React.createElement(App$Modal$Overlay, {
        children: null,
        onOverlayClick: onOverlayClick,
        onEsc: onEsc
      }, React.createElement(App$Modal$Cover, { }), React.createElement(App$Modal$ModalContentWrapper, {
            children: element
          }));
  return Belt_Option.mapWithDefault(Belt_Array.get(Array.prototype.slice.call($$document$1.getElementsByTagName("body")), 0), null, (function (param) {
                return ReactDom.createPortal(partial_arg, param);
              }));
}

function App$Modal(Props) {
  var isOpen = Props.isOpen;
  var onOverlayClick = Props.onOverlayClick;
  var onEsc = Props.onEsc;
  var children = Props.children;
  if (isOpen) {
    return renderToBody(children, onOverlayClick, onEsc);
  } else {
    return null;
  }
}

var Modal = /* module */[
  /* Cover */Cover,
  /* Overlay */Overlay,
  /* ModalContentWrapper */ModalContentWrapper,
  /* renderToBody */renderToBody,
  /* make */App$Modal
];

function App(Props) {
  var match = React.useState((function () {
          return false;
        }));
  var setOpen = match[1];
  return React.createElement("div", {
              className: Css.style(/* :: */[
                    Css.height(Css.px(4000)),
                    /* [] */0
                  ])
            }, React.createElement("button", {
                  onClick: (function (_e) {
                      return Curry._1(setOpen, (function (param) {
                                    return true;
                                  }));
                    })
                }, "open the modal"), React.createElement(App$Modal, {
                  isOpen: match[0],
                  onOverlayClick: (function (_e) {
                      return Curry._1(setOpen, (function (param) {
                                    return false;
                                  }));
                    }),
                  onEsc: (function (_e) {
                      return Curry._1(setOpen, (function (param) {
                                    return false;
                                  }));
                    }),
                  children: React.createElement("div", undefined, "this is the modal content")
                }));
}

var make = App;

exports.Modal = Modal;
exports.make = make;
/*  Not a pure module */
